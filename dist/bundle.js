!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=3)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.toSq=function(e){return e*t.pxInSquare},t.toPx=function(e){return e/t.pxInSquare},t.pxInSquare=10,t}();e.Px=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(0),o=function(t,e,n,o,i){var a=this;this.getColor=function(){return a.color},this.setColor=function(t){a.color=t},this.getX=function(){return a.x},this.setX=function(t){a.x=t},this.getY=function(){return a.y},this.setY=function(t){a.y=t},this.getPosition=function(){return[a.x,a.y]},this.setPosition=function(t){a.x=t[0],a.y=t[1]},this.getContext=function(){return a.context},this.setContext=function(t){a.context=t},this.getSize=function(){return a.size},this.setSize=function(t){a.size=t},this.getStringPosititonInPx=function(){var t=a.getPosition();return r.Px.toPx(t[0])+","+r.Px.toPx(t[1])},this.getStringPosititon=function(){return a.getPosition().join(",")},this.update=function(){a.getContext().fillStyle=a.color,a.getContext().fillRect(a.x,a.y,a.size,a.size)},this.x=e,this.y=n,this.size=t,this.context=o,this.color=i};e.BaseEntity=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.VOID=0]="VOID",t[t.OBSTACLE=1]="OBSTACLE",t[t.TRASH=2]="TRASH"}(e.EntityType||(e.EntityType={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(4),o=n(15),i=new r.Game(document.getElementById("canvas"),50),a=new o.Agent;i.start(),i.createControls(document),i.updateCallback=function(t){a.setNextAction(t)},i.endGameCallback=function(){a.reward(),console.log({rules:a.qtable.ruleCount()})};setInterval((function(){a.executeAction(document)}),1)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(5),o=n(0),i=n(7),a=n(9),c=n(11),u=n(12),s=n(14),f=function(t,e){var n=this;this.start=function(){n.clear(),n.reset(),n.garbageMan=r.GarbageManFactory.create(n.context,n.gameSize);var t=a.ObstacleFactory.generateFence(n.gameSize,n.context),e=a.ObstacleFactory.create(400,n.gameSize,n.context,[n.garbageMan.getStringPosititonInPx()].concat(t.except));n.obstacles=e.entities.concat(t.entities),n.trash=i.TrashFactory.create(50,n.gameSize,n.context,e.except),n.collider.add([n.garbageMan],n.obstacles,(function(t,e){n.endGameCallback&&n.endGameCallback(),n.start()})),n.collider.add([n.garbageMan],n.trash,(function(t,e){e.setPosition([-5e3,-5e3]),n.update()})),n.visions=u.VisionFactory.create(n.garbageMan.createVision(2),n.context),n.update()},this.update=function(){n.clear(),n.visions.forEach((function(t){t.update()})),n.garbageMan.update(),n.trash.forEach((function(t){t.update()})),n.obstacles.forEach((function(t){t.update()})),n.updateCallback&&n.updateCallback(s.StateMap.createStateMap(n.garbageMan.createVision(2),[n.obstacles,n.trash])),n.collider.check()},this.clear=function(){n.context.clearRect(0,0,n.canvas.width,n.canvas.height)},this.reset=function(){n.collider.reset()},this.move=function(t){n.garbageMan.move(t),n.visions.forEach((function(e){e.move(t)})),n.update()},this.controls=function(t){"38"==(t=t||window.event).keyCode?n.move("top"):"40"==t.keyCode?n.move("down"):"37"==t.keyCode?n.move("left"):"39"==t.keyCode?n.move("right"):"w"==t.key&&n.start()},this.createControls=function(t){t.onkeydown=n.controls},this.gameSize=e,this.canvas=t,this.canvas.width=o.Px.toSq(e),this.canvas.height=o.Px.toSq(e),this.context=t.getContext("2d"),this.collider=new c.Collider};e.Game=f},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(6),o=n(0),i=function(){function t(){}return t.create=function(t,e){var n=Math.floor(Math.random()*e),i=Math.floor(Math.random()*e);return new r.GarbageMan(o.Px.toSq(1),o.Px.toSq(n),o.Px.toSq(i),t,"red")},t}();e.GarbageManFactory=i},function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),a=n(0),c=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.createVision=function(t){for(var n=e.getPosition(),r=a.Px.toPx(n[0])-t,o=a.Px.toPx(n[1])-t,i=2*t+1,c=[],u=0;u<i;u++)for(var s=0;s<i;s++)c.push(r+s+","+(o+u));return c},e.move=function(t){switch(t){case"left":e.x-=e.size;break;case"right":e.x+=e.size;break;case"top":e.y-=e.size;break;case"down":e.y+=e.size}},e}return o(e,t),e}(i.BaseEntity);e.GarbageMan=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(8),o=n(0),i=function(){function t(){}return t.create=function(e,n,i,a){for(var c=[],u=0;u<e;u++){var s=t.generateUnique(n,a);a.push(s);var f=parseInt(s.split(",")[0]),l=parseInt(s.split(",")[1]);c.push(new r.Trash(o.Px.toSq(1),o.Px.toSq(f),o.Px.toSq(l),i,"blue"))}return c},t.generateUnique=function(e,n){var r=Math.floor(Math.random()*e)+","+Math.floor(Math.random()*e);return n.find((function(t){return t===r}))?t.generateUnique(e,n):r},t}();e.TrashFactory=i},function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),a=n(2),c=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.getType=function(){return a.EntityType.TRASH},e}return o(e,t),e}(i.BaseEntity);e.Trash=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(0),o=n(10),i=function(){function t(){}return t.create=function(e,n,i,a){for(var c=[],u=0;u<e;u++){var s=t.generateUnique(n,a);a.push(s);var f=parseInt(s.split(",")[0]),l=parseInt(s.split(",")[1]);c.push(new o.Obstacle(r.Px.toSq(1),r.Px.toSq(f),r.Px.toSq(l),i,"black"))}return{entities:c,except:a}},t.generateUnique=function(e,n){var r=Math.floor(Math.random()*e)+","+Math.floor(Math.random()*e);return n.find((function(t){return t===r}))?t.generateUnique(e,n):r},t.generateFence=function(t,e){for(var n=[],i=[],a=0;a<t;a++)i.push(a+",0"),n.push(new o.Obstacle(r.Px.toSq(1),r.Px.toSq(a),r.Px.toSq(0),e,"black")),i.push(a+","+(t-1)),n.push(new o.Obstacle(r.Px.toSq(1),r.Px.toSq(a),r.Px.toSq(t-1),e,"black"));for(var c=0;c<t;c++)i.push("0,"+c),n.push(new o.Obstacle(r.Px.toSq(1),r.Px.toSq(0),r.Px.toSq(c),e,"black")),i.push(t-1+","+c),n.push(new o.Obstacle(r.Px.toSq(1),r.Px.toSq(t-1),r.Px.toSq(c),e,"black"));return{entities:n,except:i}},t}();e.ObstacleFactory=i},function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),a=n(2),c=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.getType=function(){return a.EntityType.OBSTACLE},e}return o(e,t),e}(i.BaseEntity);e.Obstacle=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){var t=this;this.map=[],this.add=function(e,n,r){t.map.push({entities1:e,entities2:n,callback:r})},this.check=function(){var e=[];t.map.forEach((function(t,n){e[n]=[],t.entities1.forEach((function(t){e[n][t.getStringPosititon()]=t})),t.entities2.forEach((function(r){r.getStringPosititon()in e[n]&&t.callback(e[n][r.getStringPosititon()],r)}))}))},this.reset=function(){t.map=[]}};e.Collider=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(13),o=n(0),i=function(){function t(){}return t.create=function(t,e){var n=[];return t.forEach((function(t){var i=parseInt(t.split(",")[0]),a=parseInt(t.split(",")[1]);n.push(new r.Vision(o.Px.toSq(1),o.Px.toSq(i),o.Px.toSq(a),e,"yellow"))})),n},t}();e.VisionFactory=i},function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.move=function(t){switch(t){case"left":e.x-=e.size;break;case"right":e.x+=e.size;break;case"top":e.y-=e.size;break;case"down":e.y+=e.size}},e}return o(e,t),e}(n(1).BaseEntity);e.Vision=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(2),o=function(){function t(){}return t.createStateMap=function(t,e){var n={};e.forEach((function(t){return t.forEach((function(t){return n[t.getStringPosititonInPx()]=t}))}));var o=[];return t.forEach((function(t){t in n?o.push(n[t].getType()):o.push(r.EntityType.VOID)})),o.join(",")},t}();e.StateMap=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(16),o=n(17),i=n(18),a=n(2),c=function(){var t=this;this.gamma=.8,this.alpha=.1,this.setNextAction=function(e){t.nextAction=t.getAction(e),t.frameBuffer.add(e,t.nextAction)},this.getAction=function(e){if(0==Math.ceil(1e5*Math.random())%90001)return o.Action.random();if(Object.keys(t.qtable.table).length<3e4)return o.Action.random();var n={up:t.qtable.getQ(e,o.Action.UP),down:t.qtable.getQ(e,o.Action.DOWN),left:t.qtable.getQ(e,o.Action.LEFT),right:t.qtable.getQ(e,o.Action.RIGHT)};switch(console.table(n),Object.keys(n).reduce((function(t,e){return n[t]>n[e]?t:e}))){case"up":return o.Action.UP;case"down":return o.Action.DOWN;case"left":return o.Action.LEFT;case"right":return o.Action.RIGHT}},this.executeAction=function(e){switch(t.nextAction){case o.Action.UP:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"38"}));break;case o.Action.DOWN:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"40"}));break;case o.Action.LEFT:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"37"}));break;case o.Action.RIGHT:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"39"}))}},this.reward=function(){for(var e=t.frameBuffer.buffer.length-1;e>=0;--e){var n=(t.frameBuffer.buffer.length-1)/2,r=t.frameBuffer.buffer[e].state,i=r.split(","),c=void 0;if(t.frameBuffer.buffer[e-1]){var u=t.frameBuffer.buffer[e-1];if(parseInt(i[n])===a.EntityType.OBSTACLE?c=-5:parseInt(i[n])===a.EntityType.TRASH?c=5:parseInt(i[n])===a.EntityType.VOID&&(c=1),c){var s=Math.max(t.qtable.getQ(r,o.Action.UP),t.qtable.getQ(r,o.Action.DOWN),t.qtable.getQ(r,o.Action.LEFT),t.qtable.getQ(r,o.Action.RIGHT)),f=t.alpha*(c+t.gamma*s-t.qtable.getQ(u.state,u.action));t.qtable.setQ(u.state,u.action,f)}}}t.frameBuffer.clear()},this.qtable=new r.Qtable,this.frameBuffer=new i.FrameBuffer};e.Agent=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){var t=this;this.table={},this.getQ=function(e,n){var r=e+","+n;return r in t.table?t.table[r]:0},this.setQ=function(e,n,r){var o=e+","+n;o in t.table||(t.table[o]=0),t.table[o]+=r},this.ruleCount=function(){return Object.keys(t.table).length}};e.Qtable=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.UP=1,t.DOWN=2,t.LEFT=3,t.RIGHT=4,t.toArray=function(){return Object.values(t)},t.random=function(){var t=[1,2,3,4];return t[Math.random()*t.length|0]},t}();e.Action=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){var t=this;this.buffer=[],this.add=function(e,n){t.buffer.push({state:e,action:n})},this.clear=function(){t.buffer=[]}};e.FrameBuffer=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,