!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=3)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.toSq=function(e){return e*t.pxInSquare},t.toPx=function(e){return e/t.pxInSquare},t.pxInSquare=10,t}();e.Px=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=function(t,e,n,r,i){var a=this;this.getColor=function(){return a.color},this.setColor=function(t){a.color=t},this.getX=function(){return a.x},this.setX=function(t){a.x=t},this.getY=function(){return a.y},this.setY=function(t){a.y=t},this.getPosition=function(){return[a.x,a.y]},this.setPosition=function(t){a.x=t[0],a.y=t[1]},this.getContext=function(){return a.context},this.setContext=function(t){a.context=t},this.getSize=function(){return a.size},this.setSize=function(t){a.size=t},this.getStringPosititonInPx=function(){var t=a.getPosition();return o.Px.toPx(t[0])+","+o.Px.toPx(t[1])},this.getStringPosititon=function(){return a.getPosition().join(",")},this.update=function(){a.getContext().fillStyle=a.color,a.getContext().fillRect(a.x,a.y,a.size,a.size)},this.x=e,this.y=n,this.size=t,this.context=r,this.color=i};e.BaseEntity=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.VOID=0]="VOID",t[t.OBSTACLE=1]="OBSTACLE",t[t.TRASH=2]="TRASH"}(e.EntityType||(e.EntityType={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o,r=n(4),i=n(15),a=n(18),c=new r.Game(document.getElementById("canvas"),50),u=new i.Agent,s=new a.FrameBuffer;c.start(),c.updateCallback=function(t){o=u.getAction(t),s.add(t,o)},c.endGameCallback=function(){u.reward(s),s.clear(),console.log({rules:Object.keys(u.qtable.table).length})};setInterval((function(){u.executeAction(o,document)}),1);document.onkeydown=function(t){"38"==(t=t||window.event).keyCode?c.move("top"):"40"==t.keyCode?c.move("down"):"37"==t.keyCode?c.move("left"):"39"==t.keyCode?c.move("right"):"w"==t.key&&c.start()}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(5),r=n(0),i=n(7),a=n(9),c=n(11),u=n(12),s=n(14),f=function(t,e){var n=this;this.start=function(){n.clear(),n.reset(),n.garbageMan=o.GarbageManFactory.create(n.context,n.gameSize);var t=a.ObstacleFactory.generateFence(n.gameSize,n.context),e=a.ObstacleFactory.create(400,n.gameSize,n.context,[n.garbageMan.getStringPosititonInPx()].concat(t.except));n.obstacles=e.entities.concat(t.entities),n.trash=i.TrashFactory.create(50,n.gameSize,n.context,e.except),n.collider.add([n.garbageMan],n.obstacles,(function(t,e){n.endGameCallback&&n.endGameCallback(),n.start()})),n.collider.add([n.garbageMan],n.trash,(function(t,e){e.setPosition([-5e3,-5e3]),n.update()})),n.visions=u.VisionFactory.create(n.garbageMan.createVision(2),n.context),n.update()},this.update=function(){n.clear(),n.visions.forEach((function(t){t.update()})),n.garbageMan.update(),n.trash.forEach((function(t){t.update()})),n.obstacles.forEach((function(t){t.update()})),n.updateCallback&&n.updateCallback(s.StateMap.createStateMap(n.garbageMan.createVision(2),[n.obstacles,n.trash])),n.collider.check()},this.clear=function(){n.context.clearRect(0,0,n.canvas.width,n.canvas.height)},this.reset=function(){n.collider.reset()},this.move=function(t){n.garbageMan.move(t),n.visions.forEach((function(e){e.move(t)})),n.update()},this.gameSize=e,this.canvas=t,this.canvas.width=r.Px.toSq(e),this.canvas.height=r.Px.toSq(e),this.context=t.getContext("2d"),this.collider=new c.Collider};e.Game=f},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(6),r=n(0),i=function(){function t(){}return t.create=function(t,e){var n=Math.floor(Math.random()*e),i=Math.floor(Math.random()*e);return new o.GarbageMan(r.Px.toSq(1),r.Px.toSq(n),r.Px.toSq(i),t,"red")},t}();e.GarbageManFactory=i},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),a=n(0),c=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.createVision=function(t){for(var n=e.getPosition(),o=a.Px.toPx(n[0])-t,r=a.Px.toPx(n[1])-t,i=2*t+1,c=[],u=0;u<i;u++)for(var s=0;s<i;s++)c.push(o+s+","+(r+u));return c},e.move=function(t){switch(t){case"left":e.x-=e.size;break;case"right":e.x+=e.size;break;case"top":e.y-=e.size;break;case"down":e.y+=e.size}},e}return r(e,t),e}(i.BaseEntity);e.GarbageMan=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(8),r=n(0),i=function(){function t(){}return t.create=function(e,n,i,a){for(var c=[],u=0;u<e;u++){var s=t.generateUnique(n,a);a.push(s);var f=parseInt(s.split(",")[0]),l=parseInt(s.split(",")[1]);c.push(new o.Trash(r.Px.toSq(1),r.Px.toSq(f),r.Px.toSq(l),i,"blue"))}return c},t.generateUnique=function(e,n){var o=Math.floor(Math.random()*e)+","+Math.floor(Math.random()*e);return n.find((function(t){return t===o}))?t.generateUnique(e,n):o},t}();e.TrashFactory=i},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),a=n(2),c=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.getType=function(){return a.EntityType.TRASH},e}return r(e,t),e}(i.BaseEntity);e.Trash=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=n(10),i=function(){function t(){}return t.create=function(e,n,i,a){for(var c=[],u=0;u<e;u++){var s=t.generateUnique(n,a);a.push(s);var f=parseInt(s.split(",")[0]),l=parseInt(s.split(",")[1]);c.push(new r.Obstacle(o.Px.toSq(1),o.Px.toSq(f),o.Px.toSq(l),i,"black"))}return{entities:c,except:a}},t.generateUnique=function(e,n){var o=Math.floor(Math.random()*e)+","+Math.floor(Math.random()*e);return n.find((function(t){return t===o}))?t.generateUnique(e,n):o},t.generateFence=function(t,e){for(var n=[],i=[],a=0;a<t;a++)i.push(a+",0"),n.push(new r.Obstacle(o.Px.toSq(1),o.Px.toSq(a),o.Px.toSq(0),e,"black")),i.push(a+","+(t-1)),n.push(new r.Obstacle(o.Px.toSq(1),o.Px.toSq(a),o.Px.toSq(t-1),e,"black"));for(var c=0;c<t;c++)i.push("0,"+c),n.push(new r.Obstacle(o.Px.toSq(1),o.Px.toSq(0),o.Px.toSq(c),e,"black")),i.push(t-1+","+c),n.push(new r.Obstacle(o.Px.toSq(1),o.Px.toSq(t-1),o.Px.toSq(c),e,"black"));return{entities:n,except:i}},t}();e.ObstacleFactory=i},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),a=n(2),c=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.getType=function(){return a.EntityType.OBSTACLE},e}return r(e,t),e}(i.BaseEntity);e.Obstacle=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){var t=this;this.map=[],this.add=function(e,n,o){t.map.push({entities1:e,entities2:n,callback:o})},this.check=function(){var e=[];t.map.forEach((function(t,n){e[n]=[],t.entities1.forEach((function(t){e[n][t.getStringPosititon()]=t})),t.entities2.forEach((function(o){o.getStringPosititon()in e[n]&&t.callback(e[n][o.getStringPosititon()],o)}))}))},this.reset=function(){t.map=[]}};e.Collider=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(13),r=n(0),i=function(){function t(){}return t.create=function(t,e){var n=[];return t.forEach((function(t){var i=parseInt(t.split(",")[0]),a=parseInt(t.split(",")[1]);n.push(new o.Vision(r.Px.toSq(1),r.Px.toSq(i),r.Px.toSq(a),e,"yellow"))})),n},t}();e.VisionFactory=i},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.move=function(t){switch(t){case"left":e.x-=e.size;break;case"right":e.x+=e.size;break;case"top":e.y-=e.size;break;case"down":e.y+=e.size}},e}return r(e,t),e}(n(1).BaseEntity);e.Vision=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=function(){function t(){}return t.createStateMap=function(t,e){var n={};e.forEach((function(t){return t.forEach((function(t){return n[t.getStringPosititonInPx()]=t}))}));var r=[];return t.forEach((function(t){t in n?r.push(n[t].getType()):r.push(o.EntityType.VOID)})),r.join(",")},t}();e.StateMap=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(16),r=n(17),i=n(2),a=function(){var t=this;this.gamma=.8,this.alpha=.1,this.getAction=function(e){if(0==Math.ceil(1e5*Math.random())%90001)return r.Action.random();if(Object.keys(t.qtable.table).length<3e4)return r.Action.random();var n={up:t.qtable.getQ(e,r.Action.UP),down:t.qtable.getQ(e,r.Action.DOWN),left:t.qtable.getQ(e,r.Action.LEFT),right:t.qtable.getQ(e,r.Action.RIGHT)};switch(console.table(n),Object.keys(n).reduce((function(t,e){return n[t]>n[e]?t:e}))){case"up":return r.Action.UP;case"down":return r.Action.DOWN;case"left":return r.Action.LEFT;case"right":return r.Action.RIGHT}},this.executeAction=function(t,e){switch(t){case r.Action.UP:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"38"}));break;case r.Action.DOWN:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"40"}));break;case r.Action.LEFT:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"37"}));break;case r.Action.RIGHT:e.dispatchEvent(new KeyboardEvent("keydown",{keyCode:"39"}))}},this.reward=function(e){for(var n=e.buffer.length-1;n>=0;--n){var o=(e.buffer.length-1)/2,a=e.buffer[n].state,c=a.split(","),u=void 0;if(e.buffer[n-1]){var s=e.buffer[n-1];if(parseInt(c[o])===i.EntityType.OBSTACLE?u=-5:parseInt(c[o])===i.EntityType.TRASH?u=5:parseInt(c[o])===i.EntityType.VOID&&(u=1),u){var f=Math.max(t.qtable.getQ(a,r.Action.UP),t.qtable.getQ(a,r.Action.DOWN),t.qtable.getQ(a,r.Action.LEFT),t.qtable.getQ(a,r.Action.RIGHT)),l=t.alpha*(u+t.gamma*f-t.qtable.getQ(s.state,s.action));t.qtable.setQ(s.state,s.action,l)}}}},this.qtable=new o.Qtable};e.Agent=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){var t=this;this.table={},this.getQ=function(e,n){var o=e+","+n;return o in t.table?t.table[o]:0},this.setQ=function(e,n,o){var r=e+","+n;r in t.table||(t.table[r]=0),t.table[r]+=o}};e.Qtable=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.UP=1,t.DOWN=2,t.LEFT=3,t.RIGHT=4,t.toArray=function(){return Object.values(t)},t.random=function(){var t=[1,2,3,4];return t[Math.random()*t.length|0]},t}();e.Action=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){var t=this;this.buffer=[],this.add=function(e,n){t.buffer.push({state:e,action:n})},this.clear=function(){t.buffer=[]}};e.FrameBuffer=o}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,